openapi: 3.0.3
info:
  title: BookShopApi
  description: BookShopApi
  version: 1.0.11
servers:
- url: http://localhost:8080
paths:
  /books:
    get:
      summary: Get all books
      operationId: getBooks
      responses:
        "200":
          description: A list of books
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Book'
    post:
      summary: Create a new book
      operationId: createBook
      requestBody:
        description: The book to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Book'
        required: true
      responses:
        "201":
          description: The created book
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'
  /books/{id}:
    get:
      summary: Get a book by ID
      operationId: getBookById
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "200":
          description: The book
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'
    put:
      summary: Update a book by ID
      operationId: updateBookById
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      requestBody:
        description: The book to update
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Book'
        required: true
      responses:
        "200":
          description: The updated book
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'
    delete:
      summary: Delete a book by ID
      operationId: deleteBookById
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "204":
          description: Book deleted
  /order-report:
    get:
      summary: Get order report
      operationId: getOrderReport
      responses:
        "200":
          description: Order report generated successfully
          content:
            application/json:
              schema:
                type: string
                example: Order report generated successfully
  /print:
    post:
      summary: Generate PDF order report
      operationId: generatePdfOrderReport
      responses:
        "200":
          description: PDF order report generated successfully
          content:
            application/pdf:
              schema:
                type: string
                format: binary
components:
  schemas:
    Book:
      required:
      - author
      - available
      - genre
      - pages
      - price
      - stock
      - title
      type: object
      properties:
        id:
          type: integer
          format: int64
        title:
          type: string
        author:
          type: string
        genre:
          type: string
        price:
          type: number
          format: float
        pages:
          type: integer
        visitCount:
          type: integer
        available:
          type: boolean
        stock:
          type: integer
